services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
    restart: unless-stopped

  sonar:
    image: sonarqube:lts
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    depends_on:
      - postgres
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    restart: unless-stopped

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      # Mantén la de SonarQube
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube # SonarQube seguirá usando esta
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql # <--- Añade esta línea
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.jvm
    container_name: quarkus-api
    depends_on:
      - postgres
    environment:
      # Apunta a la nueva base de datos
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/myappdb # <--- Cambia aquí
      QUARKUS_DATASOURCE_USERNAME: sonar # O crea otro usuario si quieres
      QUARKUS_DATASOURCE_PASSWORD: sonar # O crea otra contraseña
    ports:
      - "8081:8080"
    restart: unless-stopped

volumes:
  postgres_data:
  sonarqube_data:
  sonarqube_extensions:
  jenkins_home: